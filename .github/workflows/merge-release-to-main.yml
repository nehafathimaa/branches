name: Merge Release to Main 

on:
  workflow_call:
    inputs:
      source_branch:
        required: true
        type: string
    secrets:
      REPO_ACCESS:
        required: true

jobs:
  merge_release_to_main:
    runs-on: ubuntu-latest
    env:
      github-token: ${{ secrets.REPO_ACCESS }}
      SOURCE_BRANCH: ${{ inputs.source_branch }}

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.email "bot@example.com"
          git config --global user.name "GitHub Action"

      - name: Fetch branches and prepare
        run: |
          git fetch origin main
          git fetch origin $SOURCE_BRANCH

      - name: Check for conflicts (dry run)
        id: conflict-check
        run: |
          git checkout -b main-local origin/main
          if git merge --no-commit --no-ff origin/$SOURCE_BRANCH; then
            echo "can_merge=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Conflict detected"
            exit 1
          fi

      - name: Unlock main branch protection
        if: steps.conflict-check.outputs.can_merge == 'true'
        id: unlock
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_ACCESS }}
          script: |
            const { owner, repo } = context.repo;
            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: null,
              enforce_admins: false,

              required_pull_request_reviews: null,
              restrictions: null,
              allow_force_pushes: true,
              allow_deletions: false,
              lock_branch: false
            });
            console.log("üîì Branch protection unlocked.");
            core.setOutput('unlock_branch', 'true');


      - name: Merge and push to main
        if: steps.conflict-check.outputs.can_merge == 'true'
        run: |
           git checkout main || git checkout -b main origin/main  
           git fetch origin $SOURCE_BRANCH
           git merge --ff-only origin/$SOURCE_BRANCH
           git push https://${{ secrets.REPO_ACCESS }}@github.com/${{ github.repository }}.git main


