name: Merge Release to Main (Shell-Based)

on:
  workflow_call:
    inputs:
      source_branch:
        required: true
        type: string
    secrets:
      merge_token:
        required: true

jobs:
  merge_release_to_main:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.merge_token }}
      SOURCE_BRANCH: ${{ inputs.source_branch }}

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.email "bot@example.com"
          git config --global user.name "GitHub Action"

      - name: Fetch branches and prepare
        run: |
          git fetch origin main
          git fetch origin $SOURCE_BRANCH

      - name: Check for conflicts (dry run)
        id: conflict-check
        run: |
          git checkout -b main-local origin/main
          if git merge --no-commit --no-ff origin/$SOURCE_BRANCH; then
            echo "can_merge=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Conflict detected"
            exit 1
          fi

      - name: Unlock main branch protection
        if: steps.conflict-check.outputs.can_merge == 'true'
        run: |
          gh api --method PATCH /repos/${{ github.repository }}/branches/main/protection \
            -H "Accept: application/vnd.github+json" \
            -f required_status_checks='' \
            -f enforce_admins=false \
            -f required_pull_request_reviews='' \
            -f restrictions='null' \
            -f allow_force_pushes=true \
            -f allow_deletions=false

      - name: Merge and push to main
        if: steps.conflict-check.outputs.can_merge == 'true'
        run: |
          git commit -m "✅ Merged $SOURCE_BRANCH into main (shell workflow)"
          git push origin main

      - name: Re-lock main branch protection
        if: steps.conflict-check.outputs.can_merge == 'true'
        run: |
          gh api --method PUT /repos/${{ github.repository }}/branches/main/protection \
            -H "Accept: application/vnd.github+json" \
            -f required_status_checks.contexts='[]' \
            -f enforce_admins=true \
            -f required_pull_request_reviews.dismiss_stale_reviews=false \
            -f required_pull_request_reviews.require_code_owner_reviews=false \
            -f required_pull_request_reviews.required_approving_review_count=0 \
            -f restrictions='null' \
            -f allow_force_pushes=false \
            -f allow_deletions=false
