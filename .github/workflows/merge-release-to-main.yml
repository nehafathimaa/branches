name: Merge Release to Main (Shell-Based)

on:
  workflow_call:
    inputs:
      source_branch:
        required: true
        type: string
    secrets:
      merge_token:
        required: true

jobs:
  merge_release_to_main:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.merge_token }}
      SOURCE_BRANCH: ${{ inputs.source_branch }}

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.email "bot@example.com"
          git config --global user.name "GitHub Action"

      - name: Fetch branches and prepare
        run: |
          git fetch origin main
          git fetch origin $SOURCE_BRANCH

      - name: Check for conflicts (dry run)
        id: conflict-check
        run: |
          git checkout -b main-local origin/main
          if git merge --no-commit --no-ff origin/$SOURCE_BRANCH; then
            echo "can_merge=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Conflict detected"
            exit 1
          fi
      - name: Debug GH API access
        run: |
             echo "GH REPO = ${{ github.repository }}"
             gh api /repos/${{ github.repository }}/branches/main/protection || echo "API failed"
        env:
             GH_TOKEN: ${{ secrets.merge_token }}


      - name: Unlock main branch protection
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.merge_token }}
          script: |
            const { owner, repo } = context.repo;

            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: null,
              enforce_admins: false,
              required_pull_request_reviews: null,
              restrictions: null,
              allow_force_pushes: true,
              allow_deletions: false
            });

            console.log("üîì Main branch protection relaxed for merge.");


      - name: Merge and push to main
        if: steps.conflict-check.outputs.can_merge == 'true'
        run: |
          git checkout main || git checkout -b main origin/main
          git merge --no-ff origin/$SOURCE_BRANCH -m "‚úÖ Merged $SOURCE_BRANCH into main (shell workflow)"
          git push origin main

      - name: Re-lock main branch protection
        if: steps.try_merge.outputs.can_merge == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.merge_token }}
          script: |
            const { owner, repo } = context.repo;
            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: null,
              enforce_admins: true,
              required_pull_request_reviews: {
                dismiss_stale_reviews: false,
                require_code_owner_reviews: false,
                required_approving_review_count: 0
              },
              restrictions: null,
              allow_force_pushes: false,
              allow_deletions: false
            });
