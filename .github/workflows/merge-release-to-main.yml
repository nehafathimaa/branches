name: Merge Release to Main

on:
  workflow_call:
    inputs:
      source_branch:
        description: 'Release branch to merge into main'
        required: true
        type: string
    secrets:
        MERGE_TOKEN:
           required: true

  

jobs:
  merge_release_to_main:
    runs-on: ubuntu-latest
    env:
      SOURCE_BRANCH: ${{ inputs.source_branch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3



      - name: Try dry merge to detect conflicts
        run: |
          echo "üß™ Simulating merge..."
          git config --global user.email "you@example.com"
          git config --global user.name "GitHub Action"
          git fetch origin main
          git fetch origin $SOURCE_BRANCH
          git checkout -b main-local origin/main
          if git merge --no-commit --no-ff origin/$SOURCE_BRANCH --allow-unrelated-histories ; then
            echo "‚úÖ Merge successful"
            echo "CAN_MERGE=true" >> $GITHUB_ENV
          else
            echo "‚ùå Merge conflict detected!"
            exit 1
          fi
      - name: Unlock main branch protection
        if: env.CAN_MERGE == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MERGE_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: null,
              enforce_admins: false,
              required_pull_request_reviews: null,
              restrictions: null,
              allow_force_pushes: true,
              allow_deletions: false
            });
            console.log("üîì Main branch protection relaxed for merge.");
      - name: Merge release into main
        if: env.CAN_MERGE == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MERGE_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const sourceBranch = '${{ env.SOURCE_BRANCH }}';
            await github.rest.repos.merge({
              owner,
              repo,
              base: 'main',
              head: sourceBranch,
              commit_message: `‚úÖ Automated clean merge of ${sourceBranch} into main`
            });
      - name: Re-lock main branch protection
        if: env.CAN_MERGE == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MERGE_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: null,
              enforce_admins: true,
              required_pull_request_reviews: {
                dismiss_stale_reviews: false,
                require_code_owner_reviews: false,
                required_approving_review_count: 0
              },
              restrictions: null,
              allow_force_pushes: false,
              allow_deletions: false
            });
